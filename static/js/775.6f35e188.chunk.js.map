{"version":3,"file":"static/js/775.6f35e188.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Profile/Profile.module.css?b512","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__emg7A\"};","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"ProfileInfo_background__78SLa\",\"description\":\"ProfileInfo_description__6F-0C\",\"info\":\"ProfileInfo_info__S7AGT\",\"status\":\"ProfileInfo_status__XnFHB\",\"name\":\"ProfileInfo_name__NzMz1\",\"text\":\"ProfileInfo_text__Ow0ZD\",\"input\":\"ProfileInfo_input__kzXLy\",\"photo_block\":\"ProfileInfo_photo_block__uirWP\",\"inputFile\":\"ProfileInfo_inputFile__oKqkt\",\"contacts\":\"ProfileInfo_contacts__66wVm\"};","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component{\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () =>{\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () =>{\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) =>{\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className={classes.status}>\r\n                {!this.state.editMode \r\n                    ? \r\n                    <div>\r\n                        <span className={classes.text} onDoubleClick={this.activateEditMode}>{this.props.status || \"----\"}</span>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} className={classes.input} autoFocus={true} onBlur={this.deactivateEditMode} type=\"text\" \r\n                            value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport classes from './ProfileInfo.module.css';\r\nimport styles from './../../common/FormsControls/FormsControls.module.css';\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    console.log(error)\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <b>Full name: </b>\r\n                <Field placeholder=\"Full name\" name={\"fullName\"} component={Input} validate={[]} />\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job: </b>\r\n                <Field placeholder=\"\" name={\"lookingForAJob\"} component={Input} validate={[]}  type={\"checkbox\"}/>\r\n            </div>\r\n            <div>\r\n                <b>My professional skills: </b>\r\n                <Field placeholder=\"My professional skills\" name={\"lookingForAJobDescription\"} component={Textarea} validate={[]}/>\r\n            </div>\r\n            <div>\r\n                <b>About me: </b>\r\n                <Field placeholder=\"About me\" name={\"aboutMe\"} component={Textarea} validate={[]}/>\r\n            </div>\r\n            <div>\r\n                <b>Contacts: </b>\r\n                <div className={classes.contacts}>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key}> {key}: \r\n                    <Field placeholder=\"Full name\" name={\"contacts.\" + key} component={Input} validate={[]} /></div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <button>Save changes</button>\r\n            { error && <div className={styles.form_summory_error}>{error}</div>} \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n    form: 'edit-profile'\r\n})(ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataFormReduxForm;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) =>{\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if(!profile){\r\n        return <div></div>\r\n    }\r\n\r\n    const onPhotoSelected= (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) =>{\r\n        saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false);\r\n            })\r\n            .catch(() => {});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/*<div className={classes.background}>\r\n                <img src='https://kudann.ru/uploads/af315a318da415860ee72551a830a06f.png' alt='img'></img>\r\n    </div>*/}\r\n            <div className={classes.description}>\r\n                <div className={classes.photo_block}>\r\n                    {profile.photos.large ? <img src={profile.photos.large} alt='avatar'/>\r\n                    : <img src='https://cdn-icons-png.flaticon.com/512/53/53133.png' alt='avatar'/>}\r\n                    {isOwner && <input className={classes.inputFile} type='file' onChange={onPhotoSelected}/>}\r\n                </div>\r\n                <div className={classes.info}>\r\n                    <div className={classes.name}>{profile.fullName}</div>\r\n                    <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n                    {editMode ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> : \r\n                    <ProfileData profile={profile} isOwner={isOwner} onEditMode={() => setEditMode(true)}/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return(\r\n        <div>\r\n            {contactTitle}: {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, onEditMode}) => {\r\n    return(\r\n        <div>\r\n            <div>\r\n                <b>Looking for a job: </b>{profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob && \r\n            <div>\r\n                <b>My professional skills: </b>{profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>About me: </b>{profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts: </b>\r\n                <div className={classes.contacts}>\r\n                    {Object.keys(profile.contacts).map(key => <Contact contactTitle={key} contactValue={profile.contacts[key]}/>)}\r\n                </div>\r\n            </div>\r\n            {isOwner && <button onClick={onEditMode}>Edit profile</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__7ozE3\",\"line\":\"MyPosts_line__5QmIi\",\"new_post\":\"MyPosts_new_post__DFnlf\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__ukdeU\",\"text\":\"Post_text__KTpaE\"};","import React from \"react\";\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) =>{\r\n    return(\r\n        <div className={classes.item}>\r\n            <div className={classes.text}>\r\n                <img src='https://cdn-icons-png.flaticon.com/512/53/53133.png' alt='avatar'/>\r\n                {props.message}\r\n            </div>\r\n            <div>\r\n                <span>like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props =>{\r\n    let postsElements = props.postsData.map(post => (<Post key={post.id} message={post.message} likesCount={post.likesCount} />));\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <span className={classes.line}></span>\r\n            <h2>My posts</h2>\r\n            <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AddNewPostForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit} className={classes.new_post}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} id=\"\" cols=\"30\" rows=\"3\" \r\n                    placeholder=\"Enter your post\" />\r\n            </div>\r\n            <div>\r\n                <button>new post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: 'addNewPost'\r\n})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import MyPosts from \"./MyPosts\";\r\nimport {addPostActionCreater} from '../../../redux/profile-reducer'\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreater(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) =>{\r\n    return (\r\n        <div className={classes.content}>\r\n            <ProfileInfo {...props}/>\r\n            <MyPostsContainer />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfileThunkCreater, getStatusThunkCreater, updateStatusThunkCreater, savePhoto, saveProfile } from '../../redux/profile-reducer';\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    updateProfile() {\r\n        let userId = this.props.router.params.userId;\r\n        if(!userId){\r\n            userId = this.props.authUserId;\r\n        }\r\n        this.props.getProfileThunkCreater(userId);\r\n        this.props.getStatusThunkCreater(userId);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updateProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if (this.props.router.params.userId !== prevProps.router.params.userId){\r\n            this.updateProfile();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} \r\n                updateStatus={this.props.updateStatusThunkCreater} \r\n                isOwner={this.props.router.params.userId == this.props.authUserId}\r\n                savePhoto={this.props.savePhoto}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status, \r\n        authUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfileThunkCreater, getStatusThunkCreater, updateStatusThunkCreater, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render (){\r\n            if(!this.props.isAuth){\r\n                return <Navigate to=\"/login\"/>;\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) =>{\r\n        return{\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["ProfileStatus","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","editMode","status","props","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","_createClass","key","prevProps","prevState","this","_jsx","className","classes","children","onChange","autoFocus","onBlur","type","onDoubleClick","React","reduxForm","form","_ref","handleSubmit","profile","error","console","log","_jsxs","onSubmit","Field","placeholder","name","component","Input","validate","Textarea","Object","keys","contacts","map","styles","form_summory_error","Contact","_ref2","contactTitle","contactValue","ProfileData","_ref3","isOwner","onEditMode","lookingForAJob","lookingForAJobDescription","aboutMe","onClick","savePhoto","saveProfile","_useState","useState","_useState2","_slicedToArray","setEditMode","photos","large","src","alt","target","files","fullName","ProfileDataForm","initialValues","formData","then","catch","message","likesCount","maxLength10","maxLengthCreator","MyPosts","postsElements","postsData","post","Post","id","AddNewPostReduxForm","values","addPost","newPostText","required","cols","rows","connect","profilePage","dispatch","addPostActionCreater","ProfileInfo","_objectSpread","MyPostsContainer","ProfileContainer","userId","router","params","authUserId","getProfileThunkCreater","getStatusThunkCreater","updateProfile","Profile","updateStatusThunkCreater","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","RedirectComponent","Navigate","to"],"sourceRoot":""}